{"ast":null,"code":"var _jsxFileName = \"/Users/wh/Desktop/react/react_demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoContext = /*#__PURE__*/createContext();\nexport function App(props) {\n  _s();\n\n  const [todos, settodos] = useState([{\n    id: \"001\",\n    name: \"吃饭1\",\n    done: true\n  }, {\n    id: \"002\",\n    name: \"吃饭2\",\n    done: true\n  }, {\n    id: \"003\",\n    name: \"吃饭3\",\n    done: false\n  }, {\n    id: \"004\",\n    name: \"吃饭4\",\n    done: false\n  }]);\n\n  const changeState = msg => {\n    const newTodos = [msg, ...todos];\n    settodos(newTodos);\n  };\n\n  const changeTodo = (id, flag) => {\n    const newTodos = todos.map(todoObj => {\n      if (todoObj.id === id) return { ...todoObj,\n        done: flag\n      };else return todoObj;\n    });\n    settodos(newTodos);\n  };\n\n  const deleteTodo = id => {\n    const newTodos = todos.filter(todoObj => {\n      return todoObj.id !== id;\n    });\n    settodos(newTodos);\n  };\n\n  const clearDoneTodo = () => {\n    const newTodos = todos.filter(todoObj => {\n      return todoObj.done === false;\n    });\n    settodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n      value: {\n        todos,\n        changeState,\n        clearDoneTodo,\n        changeTodo,\n        deleteTodo\n      },\n      children: /*#__PURE__*/_jsxDEV(props.children, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0VceOOZ9mC6ulZ2tR97SWH4XThw=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wh/Desktop/react/react_demo/src/App.js"],"names":["React","useState","createContext","TodoContext","App","props","todos","settodos","id","name","done","changeState","msg","newTodos","changeTodo","flag","map","todoObj","deleteTodo","filter","clearDoneTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,aAAxB,QAA4C,OAA5C;AACA,OAAO,WAAP;;AAGA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;AAEP,OAAO,SAASE,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC;AAClCO,IAAAA,EAAE,EAAC,KAD+B;AAElCC,IAAAA,IAAI,EAAC,KAF6B;AAGlCC,IAAAA,IAAI,EAAC;AAH6B,GAAD,EAIjC;AACAF,IAAAA,EAAE,EAAC,KADH;AAEAC,IAAAA,IAAI,EAAC,KAFL;AAGAC,IAAAA,IAAI,EAAC;AAHL,GAJiC,EAQjC;AACAF,IAAAA,EAAE,EAAC,KADH;AAEAC,IAAAA,IAAI,EAAC,KAFL;AAGAC,IAAAA,IAAI,EAAC;AAHL,GARiC,EAYjC;AACAF,IAAAA,EAAE,EAAC,KADH;AAEAC,IAAAA,IAAI,EAAC,KAFL;AAGAC,IAAAA,IAAI,EAAC;AAHL,GAZiC,CAAD,CAAlC;;AAkBA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC7B,UAAMC,QAAQ,GAAG,CAACD,GAAD,EAAK,GAAGN,KAAR,CAAjB;AACAC,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACC,GAHD;;AAKA,QAAMC,UAAU,GAAG,CAACN,EAAD,EAAIO,IAAJ,KAAa;AAChC,UAAMF,QAAQ,GAACP,KAAK,CAACU,GAAN,CAAWC,OAAD,IAAa;AACpC,UAAGA,OAAO,CAACT,EAAR,KAAaA,EAAhB,EAAmB,OAAM,EAAC,GAAGS,OAAJ;AAAYP,QAAAA,IAAI,EAACK;AAAjB,OAAN,CAAnB,KACK,OAAOE,OAAP;AACN,KAHc,CAAf;AAIAV,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACC,GAND;;AAQA,QAAMK,UAAU,GAAIV,EAAD,IAAM;AACzB,UAAMK,QAAQ,GAAGP,KAAK,CAACa,MAAN,CAAcF,OAAD,IAAW;AACvC,aAAOA,OAAO,CAACT,EAAR,KAAaA,EAApB;AACD,KAFgB,CAAjB;AAGAD,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACC,GALD;;AAOA,QAAMO,aAAa,GAAG,MAAI;AAC1B,UAAMP,QAAQ,GAAIP,KAAK,CAACa,MAAN,CAAcF,OAAO,IAAE;AACvC,aAAOA,OAAO,CAACP,IAAR,KAAe,KAAtB;AACD,KAFiB,CAAlB;AAGAH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACC,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACP,QAAAA,KAAD;AAAOK,QAAAA,WAAP;AAAmBS,QAAAA,aAAnB;AAAiCN,QAAAA,UAAjC;AAA4CI,QAAAA;AAA5C,OAA7B;AAAA,6BACC,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApDed,G;;KAAAA,G","sourcesContent":["import React, {useState,createContext} from 'react';\nimport './App.css'\n\n\nexport const TodoContext = createContext()\n\nexport function App(props) {\n  const [todos, settodos] = useState([{\n    id:\"001\",\n    name:\"吃饭1\",\n    done:true  \n  },{\n    id:\"002\",\n    name:\"吃饭2\",\n    done:true  \n  },{\n    id:\"003\",\n    name:\"吃饭3\",\n    done:false  \n  },{\n    id:\"004\",\n    name:\"吃饭4\",\n    done:false  \n  }])\n\n  const changeState = (msg) => {\n  const newTodos = [msg,...todos]\n  settodos(newTodos)\n  }\n\n  const changeTodo = (id,flag) => {\n  const newTodos=todos.map((todoObj) => {\n    if(todoObj.id===id)return{...todoObj,done:flag}\n    else return todoObj\n  })\n  settodos(newTodos)\n  } \n\n  const deleteTodo = (id)=>{\n  const newTodos = todos.filter((todoObj)=>{\n    return todoObj.id!==id\n  })\n  settodos(newTodos)\n  }\n\n  const clearDoneTodo = ()=>{\n  const newTodos =  todos.filter((todoObj=>{\n    return todoObj.done===false\n  }))\n  settodos(newTodos)\n  }\n  return (\n    <div className='app'>\n      <TodoContext.Provider value={{todos,changeState,clearDoneTodo,changeTodo,deleteTodo}}>\n       <props.children/>\n      </TodoContext.Provider>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}