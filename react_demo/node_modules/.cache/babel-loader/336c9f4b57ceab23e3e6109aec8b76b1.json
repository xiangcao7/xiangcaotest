{"ast":null,"code":"var _jsxFileName = \"/Users/wh/Desktop/react/react_demo/src/components/Color.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorContext = /*#__PURE__*/createContext({});\nexport const UPDATE_COLOR = \"UPDATE_COLOR\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_COLOR:\n      return action.color;\n\n    default:\n      return state;\n  }\n};\n\nexport const Color = props => {\n  _s();\n\n  const [color, dispatch] = useReducer(reducer, \"blue\");\n  return /*#__PURE__*/_jsxDEV(ColorContext.Provider, {\n    value: {\n      color,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Color, \"jE0Ipl5I1uvbTm2Kco8YV28gWok=\");\n\n_c = Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/wh/Desktop/react/react_demo/src/components/Color.js"],"names":["React","createContext","useReducer","ColorContext","UPDATE_COLOR","reducer","state","action","type","color","Color","props","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA4BC,UAA5B,QAA6C,OAA7C;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,CAAC,EAAD,CAAlC;AACP,OAAO,MAAMG,YAAY,GAAG,cAArB;;AAEP,MAAMC,OAAO,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,YAAL;AACI,aAAOG,MAAM,CAACE,KAAd;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPD;;AASA,OAAO,MAAMI,KAAK,GAAGC,KAAK,IAAG;AAAA;;AACzB,QAAM,CAACF,KAAD,EAAOG,QAAP,IAAmBV,UAAU,CAACG,OAAD,EAAS,MAAT,CAAnC;AACA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAD;AAAOG,MAAAA;AAAP,KAA9B;AAAA,cACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPM;;GAAMH,K;;KAAAA,K","sourcesContent":["import React,{createContext,useReducer} from \"react\";\n\nexport const ColorContext = createContext({})\nexport const UPDATE_COLOR = \"UPDATE_COLOR\"\n\nconst reducer =(state, action)=>{\n    switch(action.type){\n        case UPDATE_COLOR:\n            return action.color\n        default :\n            return state\n    }\n}\n\nexport const Color = props =>{\n    const [color,dispatch] = useReducer(reducer,\"blue\")\n    return (\n        <ColorContext.Provider value={{color,dispatch}}>\n            {props.children}\n        </ColorContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}